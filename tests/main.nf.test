nextflow_pipeline {

    name "Full Pipeline NF-Tests for LegioVUE"
    script "main.nf"

    //--- Test 1
    test("Conflicting Input Data Sources Specified") {
        tag "conflicting_input_fail"

        when {
            params {
                input = "tests/test_data/input.csv"
                fastq_dir = "tests/test_data/"
                outdir = "results"
            }
        }
        then {
            // Status
            assert workflow.failed

            // Message
            assert workflow.errorReport.contains("Please provide input data with either:")
            assert workflow.errorReport.contains("but not both")
        }
    }

    //--- Test 2
    test("No Input Data Sources Specified") {
        tag "no_input_fail"

        when {
            params {
                outdir = "results"
            }
        }
        then {
            // Status
            assert workflow.failed

            // Message
            assert workflow.errorReport.contains("Please provide input data with either:")
        }
    }

    //--- Test 3
    test("Stub Run Test") {
        tag "stub_run_success"
        options "-stub-run"

        when {
            params {
                input = "tests/test_data/input.csv"
                outdir = "results"
                min_reads = 0
            }
        }
        then {
            // Status
            assert workflow.success

            // Channels and Files
            assert path("$launchDir/results").exists()
            assert workflow.trace.failed().size() == 0
        }
    }

    //--- Test 4
    test("Full Pipeline Test") {
        tag "full_success"

        when {
            params {
                input = "tests/test_data/input.csv"
                outdir = "results"
                min_reads = 100
            }
        }
        then {
            // Status
            assert workflow.success

            // Channels and Files
            assert path("$launchDir/results").exists()
            assert workflow.trace.failed().size() == 0
        }
    }
}
